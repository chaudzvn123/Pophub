import discord
from discord.ext import commands
import random
import json
import os
import time

# ================== C·∫§U H√åNH ==================
TOKEN = "YOUR_TOKEN"
PREFIX = ","
ADMIN_UID = [1265245644558176278]
DATA_FILE = "users.json"

GIF_GOAL = "https://images.app.goo.gl/DTo97"
GIF_SAVE = "https://images.app.goo.gl/vYCTA"

intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix=PREFIX, intents=intents)

# ================== D·ªÆ LI·ªÜU ==================
def load_data():
    if not os.path.exists(DATA_FILE):
        return {}
    with open(DATA_FILE, "r", encoding="utf-8") as f:
        return json.load(f)

def save_data(data):
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=4, ensure_ascii=False)

def init_user(uid):
    uid = str(uid)
    data = load_data()
    if uid not in data:
        data[uid] = {
            "balance": 0,
            "wins": 0,
            "force_lose": 0,
            "always_win": False,
            "last_daily": 0
        }
        save_data(data)
        print(f"[INIT] Kh·ªüi t·∫°o user {uid}")
    return data[uid]   # ‚úÖ lu√¥n tr·∫£ v·ªÅ dict user

def get_balance(uid):
    data = load_data()
    init_user(uid)
    return data[str(uid)]["balance"]

def set_balance(uid, amount):
    data = load_data()
    init_user(uid)
    data[str(uid)]["balance"] = max(0, amount)
    save_data(data)
    print(f"[SET] User {uid} s·ªë d∆∞ = {amount}")

def add_balance(uid, amount):
    data = load_data()
    init_user(uid)
    data[str(uid)]["balance"] = max(0, data[str(uid)]["balance"] + amount)
    save_data(data)
    print(f"[UPDATE] User {uid} thay ƒë·ªïi {amount}, s·ªë d∆∞ m·ªõi = {data[str(uid)]['balance']}")

# ================== GAME PENALTY ==================
@bot.command(name="sut")
async def sut(ctx, huong: str, amount: str):
    huong = huong.lower()
    if huong not in ["tr√°i", "ph·∫£i"]:
        return await ctx.send("‚ùå B·∫°n ch·ªâ ƒë∆∞·ª£c ch·ªçn `tr√°i` ho·∫∑c `ph·∫£i`!")

    # all-in
    if amount.lower() == "all":
        amount = get_balance(ctx.author.id)
    else:
        try:
            amount = int(amount)
        except:
            return await ctx.send("‚ùå S·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá!")

    if amount <= 0:
        return await ctx.send("‚ùå S·ªë ti·ªÅn c∆∞·ª£c ph·∫£i l·ªõn h∆°n 0!")

    balance = get_balance(ctx.author.id)
    if balance < amount:
        return await ctx.send(f"‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn! S·ªë d∆∞: {balance:,} xu")

    # Tr·ª´ ti·ªÅn c∆∞·ª£c
    add_balance(ctx.author.id, -amount)

    data = load_data()
    uid = str(ctx.author.id)
    user = data[uid]

    # Ki·ªÉm tra ch·∫ø ƒë·ªô lu√¥n th·∫Øng
    if user.get("always_win", False):
        is_goal = True
    else:
        # B·ªãp: n·∫øu ƒë√£ th·∫Øng 6 l·∫ßn li√™n ti·∫øp th√¨ √©p thua 3 l·∫ßn
        if user["wins"] >= 6 and user["force_lose"] < 3:
            is_goal = False
            user["force_lose"] += 1
        else:
            if user["force_lose"] >= 3:
                user["wins"] = 0
                user["force_lose"] = 0
            # X√°c su·∫•t 35%
            is_goal = random.random() < 0.35

    if is_goal:
        add_balance(ctx.author.id, amount * 2)
        user["wins"] += 1
        result = f"‚öΩ GOOOOAL!!! {ctx.author.mention} **TH·∫ÆNG** {amount*2:,} xu üéâ"
        gif = GIF_GOAL
        color = 0xffd700
        print(f"[GAME] {ctx.author} TH·∫ÆNG {amount*2} xu (s·ªë d∆∞ {get_balance(ctx.author.id)})")
    else:
        user["wins"] = 0
        result = f"üß§ Th·ªß m√¥n c·∫£n ph√°! {ctx.author.mention} **THUA** m·∫•t {amount:,} xu üò¢"
        gif = GIF_SAVE
        color = 0xff0000
        print(f"[GAME] {ctx.author} THUA {amount} xu (s·ªë d∆∞ {get_balance(ctx.author.id)})")

    save_data(data)

    embed = discord.Embed(
        title="üèüÔ∏è K·∫æT QU·∫¢ PENALTY",
        description=result,
        color=color
    )
    await ctx.send(embed=embed)
    await ctx.send(gif)

# ================== DAILY ==================
@bot.command(name="daily")
async def daily(ctx):
    uid = str(ctx.author.id)
    data = load_data()
    init_user(uid)

    now = int(time.time())
    last_daily = data[uid].get("last_daily", 0)

    if now - last_daily < 24*3600:
        remain = 24*3600 - (now - last_daily)
        hours = remain // 3600
        minutes = (remain % 3600) // 60
        return await ctx.send(f"‚è≥ B·∫°n ƒë√£ nh·∫≠n daily r·ªìi! Th·ª≠ l·∫°i sau {hours}h {minutes}m.")

    data[uid]["balance"] += 1000
    data[uid]["last_daily"] = now
    save_data(data)
    print(f"[DAILY] {ctx.author} nh·∫≠n 1000 xu (s·ªë d∆∞ {data[uid]['balance']})")

    await ctx.send(f"üéÅ {ctx.author.mention} ƒë√£ nh·∫≠n **1000 xu** daily!")

# ================== TI·ªÄN T·ªÜ ==================
@bot.command(name="give")
async def give(ctx, member: discord.Member, amount: int):
    if amount <= 0:
        return await ctx.send("‚ùå S·ªë ti·ªÅn chuy·ªÉn ph·∫£i > 0!")
    if get_balance(ctx.author.id) < amount:
        return await ctx.send("‚ùå B·∫°n kh√¥ng ƒë·ªß xu!")

    add_balance(ctx.author.id, -amount)
    add_balance(member.id, amount)
    print(f"[TRANSFER] {ctx.author} ‚Üí {member} : {amount} xu")
    await ctx.send(f"üí∏ {ctx.author.mention} ƒë√£ chuy·ªÉn {amount:,} xu cho {member.mention}")

# ================== ADMIN ==================
@bot.command(name="addcash")
async def addcash(ctx, member: discord.Member, amount: int):
    if ctx.author.id not in ADMIN_UID:
        return await ctx.send("‚ùå B·∫°n kh√¥ng c√≥ quy·ªÅn!")
    add_balance(member.id, amount)
    print(f"[ADMIN] {ctx.author} add {amount} xu cho {member}")
    await ctx.send(f"‚úÖ ƒê√£ c·ªông {amount:,} xu cho {member.mention}")

@bot.command(name="settien")
async def settien(ctx, member: discord.Member, amount: int):
    if ctx.author.id not in ADMIN_UID:
        return await ctx.send("‚ùå B·∫°n kh√¥ng c√≥ quy·ªÅn!")
    set_balance(member.id, amount)
    print(f"[ADMIN] {ctx.author} set {member} = {amount} xu")
    await ctx.send(f"‚úÖ ƒê√£ ƒë·∫∑t s·ªë d∆∞ {amount:,} xu cho {member.mention}")

@bot.command(name="bantien")
async def bantien(ctx, member: discord.Member, amount: int):
    if ctx.author.id not in ADMIN_UID:
        return await ctx.send("‚ùå B·∫°n kh√¥ng c√≥ quy·ªÅn!")
    add_balance(member.id, -amount)
    print(f"[ADMIN] {ctx.author} tr·ª´ {amount} xu c·ªßa {member}")
    await ctx.send(f"‚úÖ ƒê√£ tr·ª´ {amount:,} xu c·ªßa {member.mention}")

@bot.command(name="luonthang")
async def luonthang(ctx, member: discord.Member, state: str):
    if ctx.author.id not in ADMIN_UID:
        return await ctx.send("‚ùå B·∫°n kh√¥ng c√≥ quy·ªÅn!")
    data = load_data()
    init_user(member.id)
    if state.lower() == "on":
        data[str(member.id)]["always_win"] = True
        msg = f"‚ö° {member.mention} ƒë√£ ƒë∆∞·ª£c b·∫≠t ch·∫ø ƒë·ªô **lu√¥n th·∫Øng**"
    else:
        data[str(member.id)]["always_win"] = False
        msg = f"‚ùå {member.mention} ƒë√£ t·∫Øt ch·∫ø ƒë·ªô **lu√¥n th·∫Øng**"
    save_data(data)
    print(f"[ADMIN] {ctx.author} ƒë·ªïi always_win {member} = {state}")
    await ctx.send(msg)

# ================== S·ª∞ KI·ªÜN ==================
@bot.event
async def on_ready():
    print(f"‚úÖ Bot ƒë√£ ƒëƒÉng nh·∫≠p: {bot.user}")

# ================== RUN ==================
bot.run(TOKEN)
