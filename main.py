# ================== C√ÄI TH∆Ø VI·ªÜN (ch·ªâ c·∫ßn ch·∫°y 1 l·∫ßn) ==================
# N·∫øu ch·∫°y trong CodePad th√¨ c·∫ßn d√≤ng n√†y ƒë·ªÉ c√†i discord.py
# N·∫øu b·∫°n ƒë√£ c√†i r·ªìi th√¨ c√≥ th·ªÉ b·ªè qua
try:
    import discord
    from discord.ext import commands
except ImportError:
    import os
    os.system("pip install discord.py")
    import discord
    from discord.ext import commands

import json
import random
import os

# ================== C·∫§U H√åNH ==================
TOKEN = "NH·∫¨P_TOKEN_BOT_V√ÄO_ƒê√ÇY"
PREFIX = ","
ADMIN_UID = [1265245644558176278]  # Thay UID admin Discord

DATA_FILE = "users.json"

# ================== LOAD & SAVE TI·ªÄN ==================
def load_data():
    if not os.path.exists(DATA_FILE):
        return {}
    try:
        with open(DATA_FILE, "r") as f:
            return json.load(f)
    except (json.JSONDecodeError, FileNotFoundError):
        return {}

def save_data(data):
    with open(DATA_FILE, "w") as f:
        json.dump(data, f, indent=4)

users = load_data()

def get_balance(uid):
    return users.get(str(uid), 0)

def set_balance(uid, amount):
    users[str(uid)] = max(0, amount)  # kh√¥ng cho √¢m ti·ªÅn
    save_data(users)

def add_balance(uid, amount):
    users[str(uid)] = max(0, get_balance(uid) + amount)
    save_data(users)

# ================== BOT ==================
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix=PREFIX, intents=intents)

# ================== L·ªÜNH ADMIN ==================
@bot.command()
async def addtien(ctx, member: discord.Member, amount: int):
    if ctx.author.id not in ADMIN_UID:
        return await ctx.send("‚ùå B·∫°n kh√¥ng c√≥ quy·ªÅn d√πng l·ªánh n√†y.")
    if amount <= 0:
        return await ctx.send("‚ùå S·ªë ti·ªÅn ph·∫£i l·ªõn h∆°n 0.")
    add_balance(member.id, amount)
    await ctx.send(f"‚úÖ ƒê√£ c·ªông {amount} xu cho {member.mention}. S·ªë d∆∞ m·ªõi: {get_balance(member.id)}")

@bot.command()
async def settien(ctx, member: discord.Member, amount: int):
    if ctx.author.id not in ADMIN_UID:
        return await ctx.send("‚ùå B·∫°n kh√¥ng c√≥ quy·ªÅn d√πng l·ªánh n√†y.")
    if amount < 0:
        return await ctx.send("‚ùå S·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá.")
    set_balance(member.id, amount)
    await ctx.send(f"‚úÖ ƒê√£ ƒë·∫∑t l·∫°i s·ªë d∆∞ c·ªßa {member.mention} th√†nh {amount}")

# ================== L·ªÜNH XEM S·ªê D∆Ø ==================
@bot.command(name="sotiendangco")
async def sotiendangco(ctx, member: discord.Member = None):
    target = member or ctx.author
    bal = get_balance(target.id)
    if member:
        await ctx.send(f"üí∞ S·ªë ti·ªÅn hi·ªán c√≥ c·ªßa {target.mention}: {bal} xu")
    else:
        await ctx.send(f"üí∞ S·ªë ti·ªÅn hi·ªán c√≥ c·ªßa b·∫°n: {bal} xu")

# ================== L·ªÜNH CH∆†I T√ÄI X·ªàU ==================
@bot.command()
async def taixiu(ctx, choice: str = None, amount: int = None):
    if choice is None or amount is None:
        return await ctx.send("‚ùå C√∫ ph√°p ƒë√∫ng: `,taixiu <t√†i/x·ªâu> <s·ªë ti·ªÅn>`")

    choice = choice.lower()
    if choice not in ["t√†i", "tai", "x·ªâu", "xiu"]:
        return await ctx.send("‚ùå Vui l√≤ng ch·ªçn 't√†i' ho·∫∑c 'x·ªâu'")

    balance = get_balance(ctx.author.id)
    if amount <= 0:
        return await ctx.send("‚ùå S·ªë ti·ªÅn c∆∞·ª£c ph·∫£i l·ªõn h∆°n 0")
    if amount > balance:
        return await ctx.send(f"‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn! S·ªë d∆∞ hi·ªán t·∫°i: {balance}")

    # Tung 3 x√∫c x·∫Øc
    dice = [random.randint(1, 6) for _ in range(3)]
    total = sum(dice)

    # Lu·∫≠t t√†i x·ªâu: <=10 l√† x·ªâu, >10 l√† t√†i
    result = "t√†i" if total > 10 else "x·ªâu"

    win = False
    if (choice.startswith("t") and result == "t√†i") or (choice.startswith("x") and result == "x·ªâu"):
        win = True

    if win:
        add_balance(ctx.author.id, amount)
        await ctx.send(
            f"üé≤ K·∫øt qu·∫£: {dice} = {total} ‚Üí **{result.upper()}**\n"
            f"‚úÖ B·∫°n th·∫Øng {amount} xu!\nüí∞ S·ªë ti·ªÅn hi·ªán c√≥: {get_balance(ctx.author.id)}"
        )
    else:
        add_balance(ctx.author.id, -amount)
        await ctx.send(
            f"üé≤ K·∫øt qu·∫£: {dice} = {total} ‚Üí **{result.upper()}**\n"
            f"‚ùå B·∫°n thua {amount} xu!\nüí∞ S·ªë ti·ªÅn hi·ªán c√≥: {get_balance(ctx.author.id)}"
        )

# ================== CH·∫†Y BOT ==================
bot.run(TOKEN)
