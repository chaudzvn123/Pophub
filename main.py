import discord
from discord.ext import commands
import random
import json
import os
import time

# ================== C·∫§U H√åNH ==================
TOKEN = "YOUR_TOKEN"   # ‚ö†Ô∏è Thay b·∫±ng token th·∫≠t
PREFIX = ","
ADMIN_UID = [1265245644558176278]   # ID admin (int)
DATA_FILE = "users.json"

GIF_GOAL = "https://drive.google.com/uc?export=view&id=1ABCDefGhIJklMNopQRstuVWxyz12345"
GIF_SAVE = "https://media.discordapp.net/attachments/xyz/save.gif"

# ================== LOAD & SAVE ==================
def load_data():
    if not os.path.exists(DATA_FILE):
        with open(DATA_FILE, "w", encoding="utf-8") as f:
            json.dump({}, f)
    with open(DATA_FILE, "r", encoding="utf-8") as f:
        try:
            return json.load(f)
        except json.JSONDecodeError:
            print("[ERROR] JSON h·ªèng ‚Üí reset l·∫°i")
            return {}

def save_data(data):
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=4, ensure_ascii=False)

def init_user(uid):
    uid_str = str(uid)
    data = load_data()
    if uid_str not in data:
        data[uid_str] = {
            "balance": 0,
            "wins": 0,
            "force_lose": 0,
            "always_win": False,
            "last_daily": 0
        }
        save_data(data)
        print(f"[INIT] T·∫°o user m·ªõi {uid_str}")
    return data[uid_str]

def get_balance(uid):
    data = load_data()
    init_user(uid)
    return int(data[str(uid)]["balance"])

def set_balance(uid, amount):
    data = load_data()
    init_user(uid)
    data[str(uid)]["balance"] = max(0, int(amount))
    save_data(data)

def add_balance(uid, amount):
    data = load_data()
    init_user(uid)
    uid_str = str(uid)
    data[uid_str]["balance"] = max(0, int(data[uid_str]["balance"]) + int(amount))
    save_data(data)

# ================== BOT ==================
intents = discord.Intents.default()
intents.message_content = True
intents.members = True
bot = commands.Bot(command_prefix=PREFIX, intents=intents, help_command=None)

# --------- DAILY ---------
@bot.command(name="daily")
async def daily(ctx):
    uid = str(ctx.author.id)
    data = load_data()
    init_user(uid)
    print(f"[DAILY] {ctx.author} ({uid}) g·ªçi l·ªánh")

    now = int(time.time())
    last_daily = int(data[uid].get("last_daily", 0))

    if now - last_daily < 86400:
        remain = 86400 - (now - last_daily)
        hours = remain // 3600
        minutes = (remain % 3600) // 60
        print(f"[DAILY] ch∆∞a ƒë·ªß th·ªùi gian, c√≤n {hours}h{minutes}m")
        return await ctx.send(f"‚è≥ B·∫°n ph·∫£i ch·ªù {hours}h {minutes}m n·ªØa ƒë·ªÉ nh·∫≠n qu√† daily!")

    reward = 1000
    add_balance(uid, reward)
    data[uid]["last_daily"] = now
    save_data(data)
    print(f"[DAILY] {ctx.author} nh·∫≠n {reward} xu")
    await ctx.send(f"üéÅ {ctx.author.mention} ƒë√£ nh·∫≠n **{reward} xu**! S·ªë d∆∞: **{get_balance(uid):,}**")

# --------- BAL ---------
@bot.command(name="bal", aliases=["balance"])
async def bal(ctx):
    uid = str(ctx.author.id)
    balance = get_balance(uid)
    print(f"[BAL] {ctx.author} c√≥ {balance} xu")
    await ctx.send(f"üí∞ S·ªë d∆∞ c·ªßa b·∫°n: **{balance:,} xu**")

# --------- GIVE ---------
@bot.command(name="give")
async def give(ctx, member: discord.Member, amount: int):
    sender = str(ctx.author.id)
    receiver = str(member.id)
    print(f"[GIVE] {ctx.author} ‚Üí {member}, s·ªë ti·ªÅn: {amount}")

    if amount <= 0:
        return await ctx.send("‚ùå S·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá!")
    if get_balance(sender) < amount:
        return await ctx.send("‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn!")

    add_balance(sender, -amount)
    add_balance(receiver, amount)
    print(f"[GIVE] Th√†nh c√¥ng: {ctx.author} -{amount} ‚Üí {member} +{amount}")
    await ctx.send(f"‚úÖ {ctx.author.mention} ƒë√£ chuy·ªÉn **{amount:,} xu** cho {member.mention}")

# --------- ADMIN ---------
@bot.command(name="addcash")
async def addcash(ctx, member: discord.Member, amount: int):
    if ctx.author.id not in ADMIN_UID:
        return await ctx.send("‚ùå B·∫°n kh√¥ng c√≥ quy·ªÅn!")
    print(f"[ADMIN:addcash] {ctx.author} +{amount} cho {member}")
    add_balance(member.id, amount)
    await ctx.send(f"‚úÖ ƒê√£ c·ªông **{amount:,} xu** cho {member.mention}")

@bot.command(name="settien")
async def settien(ctx, member: discord.Member, amount: int):
    if ctx.author.id not in ADMIN_UID:
        return await ctx.send("‚ùå B·∫°n kh√¥ng c√≥ quy·ªÅn!")
    print(f"[ADMIN:settien] {ctx.author} ƒë·∫∑t {member} = {amount}")
    set_balance(member.id, amount)
    await ctx.send(f"‚úÖ ƒê√£ ƒë·∫∑t s·ªë d∆∞ c·ªßa {member.mention} = **{amount:,} xu**")

@bot.command(name="bantien")
async def bantien(ctx, member: discord.Member, amount: int):
    if ctx.author.id not in ADMIN_UID:
        return await ctx.send("‚ùå B·∫°n kh√¥ng c√≥ quy·ªÅn!")
    if amount <= 0:
        return await ctx.send("‚ö†Ô∏è S·ªë ti·ªÅn ph·∫£i > 0.")
    print(f"[ADMIN:bantien] {ctx.author} -{amount} c·ªßa {member}")
    add_balance(member.id, -amount)
    await ctx.send(f"‚úÖ ƒê√£ tr·ª´ **{amount:,} xu** c·ªßa {member.mention}")

@bot.command(name="luonthang")
async def luonthang(ctx, member: discord.Member, mode: str):
    if ctx.author.id not in ADMIN_UID:
        return await ctx.send("‚ùå B·∫°n kh√¥ng c√≥ quy·ªÅn!")
    data = load_data()
    uid = str(member.id)
    init_user(uid)

    m = mode.lower()
    if m == "on":
        data[uid]["always_win"] = True
    elif m == "off":
        data[uid]["always_win"] = False
    else:
        return await ctx.send("‚ùå Sai c√∫ ph√°p! D√πng: `,luonthang @user on/off`")
    save_data(data)
    print(f"[ADMIN:luonthang] {ctx.author} set {member} always_win={data[uid]['always_win']}")
    await ctx.send(f"‚ö° {member.mention} ƒë√£ {'b·∫≠t' if m=='on' else 't·∫Øt'} ch·∫ø ƒë·ªô **lu√¥n th·∫Øng**")

# --------- GAME S√öT ---------
@bot.command(name="sut")
async def sut(ctx, huong: str, tien: str):
    uid = str(ctx.author.id)
    user = init_user(uid)
    print(f"[SUT] {ctx.author} ch·ªçn {huong} v·ªõi {tien}")

    # X·ª≠ l√Ω s·ªë ti·ªÅn
    if tien.lower() == "all":
        bet = get_balance(uid)
    else:
        try:
            bet = int(tien)
        except ValueError:
            return await ctx.send("‚ùå S·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá! VD: `,sut tr√°i 500`")

    if bet <= 0:
        return await ctx.send("‚ùå S·ªë ti·ªÅn ph·∫£i > 0!")
    if get_balance(uid) < bet:
        return await ctx.send(f"‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn! S·ªë d∆∞ hi·ªán t·∫°i: **{get_balance(uid):,} xu**")

    choice = huong.lower()
    if choice not in ["tr√°i", "ph·∫£i"]:
        return await ctx.send("‚ö†Ô∏è B·∫°n ph·∫£i ch·ªçn `tr√°i` ho·∫∑c `ph·∫£i`!")

    # K·∫øt qu·∫£
    if user.get("always_win", False):
        goal = choice
    else:
        goal = random.choice(["tr√°i", "ph·∫£i"])

    if choice == goal:
        add_balance(uid, bet)
        result = f"üéâ {ctx.author.mention} S√öT V√ÄO!!! B·∫°n th·∫Øng **{bet:,} xu**"
        gif = GIF_GOAL
        color = 0x00ff00
    else:
        add_balance(uid, -bet)
        result = f"üíî {ctx.author.mention} s√∫t tr∆∞·ª£t! B·∫°n thua **{bet:,} xu**"
        gif = GIF_SAVE
        color = 0xff0000

    print(f"[SUT] {ctx.author} ch·ªçn {choice}, goal={goal}, k·∫øt qu·∫£: {result}")
    embed = discord.Embed(title="‚öΩ K·∫æT QU·∫¢ S√öT", description=result, color=color)
    embed.set_image(url=gif)
    await ctx.send(embed=embed)

# --------- C√ÅCH CH∆†I ---------
@bot.command(name="cachchoi")
async def cachchoi(ctx):
    embed = discord.Embed(
        title="üìñ H∆Ø·ªöNG D·∫™N & DANH S√ÅCH L·ªÜNH",
        description="T·∫•t c·∫£ l·ªánh hi·ªán c√≥ trong bot:",
        color=0x00ffcc
    )
    embed.add_field(
        name="‚öΩ Game Penalty",
        value="`,sut [tr√°i/ph·∫£i] [s·ªë ti·ªÅn | all]`\nVD: `,sut tr√°i 500` ho·∫∑c `,sut ph·∫£i all`",
        inline=False
    )
    embed.add_field(name="üéÅ Daily", value="`,daily` ‚Üí Nh·∫≠n 1000 xu m·ªói 24h", inline=False)
    embed.add_field(name="üí∏ Ti·ªÅn t·ªá", value="`,give @user [s·ªë ti·ªÅn]`\n`,bal` ho·∫∑c `,balance` ‚Üí Xem s·ªë d∆∞", inline=False)
    embed.add_field(
        name="‚ö° Admin",
        value="`,addcash @user [s·ªë ti·ªÅn]`\n`,settien @user [s·ªë ti·ªÅn]`\n`,bantien @user [s·ªë ti·ªÅn]`\n`,luonthang @user [on/off]`",
        inline=False
    )
    embed.set_footer(text="Ch√∫c b·∫°n ch∆°i vui v·∫ª ‚öΩ")
    await ctx.send(embed=embed)

# --------- B·∫ÆT L·ªñI ---------
@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        return await ctx.send("‚ö†Ô∏è Thi·∫øu tham s·ªë! D√πng `,cachchoi` ƒë·ªÉ xem h∆∞·ªõng d·∫´n.")
    if isinstance(error, commands.BadArgument):
        return await ctx.send("‚ö†Ô∏è Sai ki·ªÉu tham s·ªë! D√πng `,cachchoi` ƒë·ªÉ xem h∆∞·ªõng d·∫´n.")
    if isinstance(error, commands.CommandNotFound):
        return await ctx.send("‚ùì L·ªánh kh√¥ng t·ªìn t·∫°i. Th·ª≠ `,cachchoi` nh√©.")
    print("[ERROR]", repr(error))

# ================== RUN ==================
@bot.event
async def on_ready():
    print(f"‚úÖ Bot ƒë√£ ƒëƒÉng nh·∫≠p: {bot.user} (prefix: {PREFIX})")

bot.run(TOKEN)
